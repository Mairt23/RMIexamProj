
package ct414;

import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.List;

public class ExamEngine implements ExamServer {
	
	private String[4] mathsQs;
	private String[4][4] mathsAs;
	private String[4] computersQs;
	private String[4][4] computersAs;
	
	private int[3] users;
	private String[3] passwords;
	
    // Constructor is required
    public ExamEngine() {
        super();
        mathsQs = new String[] {"1+1=", "5+4=", "9-7=", "13-7="};
        mathsAs = new String[][] {{"1","2","3","4"},{"5","7","9","11"},{"0","2","4","3"},{"7","6","9","5"}};
        computersQs = new String[] {"Which of the following is a type of loop?", "Which of the following is a common conditional clause keyword?", "What does [] commonly signify?", "What letter precided by a \ sigifies the end of line in a file?"};
        computersAs = new String[][] {{"when","file","else","while"},{"if","for","open","move"},{"a file","an array","an int","a dictionary"},{"t","s","n","b"}};
        
        users = new int[] {123,456,789};
        passwords = new String[] {"pass", "word", "hi"}
    }

    // Implement the methods defined in the ExamServer interface...
    // Return an access token that allows access to the server for some time period
    public int login(int studentid, String password) throws 
                UnauthorizedAccess, RemoteException {

	// TBD: You need to implement this method!
	// For the moment method just returns an empty or null value to allow it to compile

	return 0;	
    }

    // Return a summary list of Assessments currently available for this studentid
    public List<String> getAvailableSummary(int token, int studentid) throws
                UnauthorizedAccess, NoMatchingAssessment, RemoteException {

        // TBD: You need to implement this method!
        // For the moment method just returns an empty or null value to allow it to compile

        return null;
    }

    // Return an Assessment object associated with a particular course code
    public Assessment getAssessment(int token, int studentid, String courseCode) throws
                UnauthorizedAccess, NoMatchingAssessment, RemoteException {

        // TBD: You need to implement this method!
        // For the moment method just returns an empty or null value to allow it to compile

        return null;
    }

    // Submit a completed assessment
    public void submitAssessment(int token, int studentid, Assessment completed) throws 
                UnauthorizedAccess, NoMatchingAssessment, RemoteException {

        // TBD: You need to implement this method!
    }

    public static void main(String[] args) {
        if (System.getSecurityManager() == null) {
            System.setSecurityManager(new SecurityManager());
        }
        try {
            String name = "ExamServer";
            ExamServer engine = new ExamEngine();
            ExamServer stub =
                (ExamServer) UnicastRemoteObject.exportObject(engine, 0);
            Registry registry = LocateRegistry.getRegistry();
            registry.rebind(name, stub);
            System.out.println("ExamEngine bound");
        } catch (Exception e) {
            System.err.println("ExamEngine exception:");
            e.printStackTrace();
        }
    }
}
